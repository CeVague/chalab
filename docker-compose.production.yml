version: '2'
volumes:
  dbvolume:
  staticvolume:
  mediavolume:
services:
  web:
    extends:
      file: docker-compose.base.yml
      service: web
    restart: always
    env_file: .env
    environment:
      - "DJANGO_SETTINGS_MODULE=instances.production"
    depends_on:
      - db
      - smtp
    ports:
      - "8742:8000"
    volumes:
      - mediavolume:/app/media
      - staticvolume:/app/static
  db:
    extends:
      file: docker-compose.base.yml
      service: db
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - dbvolume:/var/lib/postgresql/data
  smtp:
    image: namshi/smtp
    restart: always
  rabbitmq:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq
    restart: always
  celery:
    extends:
      file: docker-compose.base.yml
      service: celery
    restart: always
    env_file: .env
    environment:
      - "DJANGO_SETTINGS_MODULE=instances.production"
    depends_on:
      - rabbitmq
      - db
    volumes:
      - mediavolume:/app/media
  flower:
    extends:
      file: docker-compose.base.yml
      service: flower
    restart: always
    depends_on:
      - celery
      - rabbitmq
  web_scripts:
    extends:
      file: docker-compose.base.yml
      service: web
    env_file: .env
    environment:
      - "DJANGO_SETTINGS_MODULE=instances.production"
    depends_on:
      - db
      - celery
    volumes:
      - .:/app
      - mediavolume:/app/media
      - staticvolume:/app/static
  media:
    image: lsenta/noconf-nginx
    ports:
      - "8843:80"
    environment:
      - "STATIC_FOLDER=/app/media"
    volumes:
      - mediavolume:/app/media
  static:
    image: lsenta/noconf-nginx
    ports:
      - "8842:80"
    environment:
      - "STATIC_FOLDER=/app/static"
    volumes:
      - staticvolume:/app/static
